{"ast":null,"code":"var _jsxFileName = \"/Applications/Html/leha/Todo-list_React/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { AuthContext } from './components/Auth/AuthContext';\nimport { Header } from './components/Header/Header';\nimport { TodoList } from './components/TodoList';\nimport { ErrorNotification } from './components/ErrorNotification';\nimport { Footer } from './components/Footer';\nimport { FilterType } from './types/Filter';\nimport { getTodos, deleteTodo, updateTodo } from './api/todos';\nimport { ErrorMessage } from './types/Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const newTodoField = useRef(null);\n  const [todos, setTodos] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [fileterType, setFilterType] = useState(FilterType.All);\n  const [title, setTitle] = useState('');\n  const [selectedId, setSelectedId] = useState([]);\n  const [isAdding, setIsAdding] = useState(false);\n  const [toggle, setToggle] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState(0);\n  const user = useContext(AuthContext);\n  useEffect(() => {\n    const getTodosFromServer = async userId => {\n      try {\n        const receivedTodos = await getTodos(userId);\n        setTodos(receivedTodos);\n      } catch (error) {\n        setErrorMessage(`${error}`);\n      }\n    };\n\n    if (!user) {\n      return;\n    }\n\n    getTodosFromServer(user.id);\n  }, []);\n  const filteredTodos = useMemo(() => {\n    return todos.filter(todo => {\n      switch (fileterType) {\n        case FilterType.Active:\n          return !todo.completed;\n\n        case FilterType.Completed:\n          return todo.completed;\n\n        default:\n          return true;\n      }\n    });\n  }, [todos, fileterType]);\n  const removeTodo = useCallback(async TodoId => {\n    setSelectedId([TodoId]);\n\n    try {\n      await deleteTodo(TodoId);\n      setTodos(prevTodos => prevTodos.filter(({\n        id\n      }) => id !== TodoId));\n    } catch {\n      setErrorMessage(ErrorMessage.NotDelete);\n    }\n  }, [todos, errorMessage]);\n  const completedTodos = useMemo(() => {\n    return todos.filter(todo => todo.completed);\n  }, [todos]);\n  const handleChange = useCallback(async (updateId, data) => {\n    setSelectedId([updateId]);\n\n    try {\n      const changeStatus = await updateTodo(updateId, data);\n      setTodos(prevTodos => prevTodos.map(todo => todo.id === updateId ? changeStatus : todo));\n    } catch {\n      setErrorMessage(ErrorMessage.NotUpdate);\n    }\n\n    setSelectedId([]);\n  }, [todos]);\n\n  const handleAllCompleted = async () => {\n    if (completedTodos.length === todos.length) {\n      setSelectedId(todos.map(todo => todo.id));\n    } else {\n      setSelectedId(todos.filter(todo => !todo.completed).map(todo => todo.id));\n    }\n\n    try {\n      const newTodos = await Promise.all(todos.map(todo => todo.completed !== toggle ? updateTodo(todo.id, {\n        completed: toggle\n      }) : todo));\n      setTodos(newTodos);\n    } catch {\n      setErrorMessage(ErrorMessage.NotUpdate);\n    }\n\n    setToggle(!toggle);\n    setSelectedId([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"todoapp__title\",\n      children: \"todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoapp__content\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        newTodoField: newTodoField,\n        setTitle: setTitle,\n        title: title,\n        setIsAdding: setIsAdding,\n        handleAllCompleted: handleAllCompleted,\n        todos: todos,\n        isAdding: isAdding,\n        user: user,\n        setErrorMessage: setErrorMessage,\n        setTodos: setTodos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), (isAdding || todos.length > 0) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TodoList, {\n          todos: filteredTodos,\n          removeTodo: removeTodo,\n          selectedId: selectedId,\n          isAdding: isAdding,\n          title: title,\n          handleChange: handleChange,\n          selectedTodo: selectedTodo,\n          setSelectedTodo: setSelectedTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          filterType: fileterType,\n          filterTypes: setFilterType,\n          todos: todos,\n          completedTodos: completedTodos,\n          setTodos: setTodos,\n          setErrorMessage: setErrorMessage,\n          errorMessage: errorMessage,\n          setSelectedId: setSelectedId,\n          selectedId: selectedId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(ErrorNotification, {\n      errorMessage: errorMessage,\n      setErrorMessage: setErrorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"7IzZdHeAw/HxrkgQpodj4b/YP1U=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Applications/Html/leha/Todo-list_React/src/App.tsx"],"names":["React","useCallback","useContext","useEffect","useMemo","useRef","useState","AuthContext","Header","TodoList","ErrorNotification","Footer","FilterType","getTodos","deleteTodo","updateTodo","ErrorMessage","App","newTodoField","todos","setTodos","errorMessage","setErrorMessage","fileterType","setFilterType","All","title","setTitle","selectedId","setSelectedId","isAdding","setIsAdding","toggle","setToggle","selectedTodo","setSelectedTodo","user","getTodosFromServer","userId","receivedTodos","error","id","filteredTodos","filter","todo","Active","completed","Completed","removeTodo","TodoId","prevTodos","NotDelete","completedTodos","handleChange","updateId","data","changeStatus","map","NotUpdate","handleAllCompleted","length","newTodos","Promise","all"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { AuthContext } from './components/Auth/AuthContext';\nimport { Header } from './components/Header/Header';\nimport { TodoList } from './components/TodoList';\nimport { ErrorNotification } from './components/ErrorNotification';\nimport { Footer } from './components/Footer';\nimport { Todo } from './types/Todo';\nimport { FilterType } from './types/Filter';\nimport {\n  getTodos,\n  deleteTodo,\n  updateTodo,\n} from './api/todos';\nimport { ErrorMessage } from './types/Error';\n\nexport const App: React.FC = () => {\n  const newTodoField = useRef<HTMLInputElement>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [fileterType, setFilterType] = useState(FilterType.All);\n  const [title, setTitle] = useState('');\n  const [selectedId, setSelectedId] = useState<number[]>([]);\n  const [isAdding, setIsAdding] = useState(false);\n  const [toggle, setToggle] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState(0);\n  const user = useContext(AuthContext);\n\n  useEffect(() => {\n    const getTodosFromServer = async (userId: number) => {\n      try {\n        const receivedTodos = await getTodos(userId);\n\n        setTodos(receivedTodos);\n      } catch (error) {\n        setErrorMessage(`${error}`);\n      }\n    };\n\n    if (!user) {\n      return;\n    }\n\n    getTodosFromServer(user.id);\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return todos.filter(todo => {\n      switch (fileterType) {\n        case FilterType.Active:\n          return !todo.completed;\n        case FilterType.Completed:\n          return todo.completed;\n        default:\n          return true;\n      }\n    });\n  }, [todos, fileterType]);\n\n  const removeTodo = useCallback(async (TodoId: number) => {\n    setSelectedId([TodoId]);\n    try {\n      await deleteTodo(TodoId);\n\n      setTodos((prevTodos) => prevTodos.filter(({ id }) => id !== TodoId));\n    } catch {\n      setErrorMessage(ErrorMessage.NotDelete);\n    }\n  }, [todos, errorMessage]);\n\n  const completedTodos = useMemo(() => {\n    return todos.filter(todo => todo.completed);\n  }, [todos]);\n\n  const handleChange = useCallback(\n    async (updateId: number, data: Partial<Todo>) => {\n      setSelectedId([updateId]);\n\n      try {\n        const changeStatus: Todo = await updateTodo(updateId, data);\n\n        setTodos(prevTodos => prevTodos.map(todo => (\n          todo.id === updateId\n            ? changeStatus\n            : todo\n        )));\n      } catch {\n        setErrorMessage(ErrorMessage.NotUpdate);\n      }\n\n      setSelectedId([]);\n    }, [todos],\n  );\n\n  const handleAllCompleted = async () => {\n    if (completedTodos.length === todos.length) {\n      setSelectedId(todos.map(todo => todo.id));\n    } else {\n      setSelectedId(todos.filter(todo => !todo.completed)\n        .map(todo => todo.id));\n    }\n\n    try {\n      const newTodos = await Promise.all(todos.map(todo => (\n        todo.completed !== toggle\n          ? updateTodo(todo.id, { completed: toggle })\n          : todo\n      )));\n\n      setTodos(newTodos);\n    } catch {\n      setErrorMessage(ErrorMessage.NotUpdate);\n    }\n\n    setToggle(!toggle);\n    setSelectedId([]);\n  };\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <Header\n          newTodoField={newTodoField}\n          setTitle={setTitle}\n          title={title}\n          setIsAdding={setIsAdding}\n          handleAllCompleted={handleAllCompleted}\n          todos={todos}\n          isAdding={isAdding}\n          user={user}\n          setErrorMessage={setErrorMessage}\n          setTodos={setTodos}\n        />\n        {(isAdding || todos.length > 0) && (\n          <>\n            <TodoList\n              todos={filteredTodos}\n              removeTodo={removeTodo}\n              selectedId={selectedId}\n              isAdding={isAdding}\n              title={title}\n              handleChange={handleChange}\n              selectedTodo={selectedTodo}\n              setSelectedTodo={setSelectedTodo}\n            />\n            <Footer\n              filterType={fileterType}\n              filterTypes={setFilterType}\n              todos={todos}\n              completedTodos={completedTodos}\n              setTodos={setTodos}\n              setErrorMessage={setErrorMessage}\n              errorMessage={errorMessage}\n              setSelectedId={setSelectedId}\n              selectedId={selectedId}\n            />\n          </>\n        )}\n      </div>\n      {errorMessage && (\n        <ErrorNotification\n          errorMessage={errorMessage}\n          setErrorMessage={setErrorMessage}\n        />\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}