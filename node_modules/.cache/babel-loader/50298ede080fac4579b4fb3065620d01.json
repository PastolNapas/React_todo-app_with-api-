{"ast":null,"code":"var _jsxFileName = \"/Applications/Html/Mate_React/React_todo-app_with-api/React_todo-app_with-api-/src/components/Footer/Footer.tsx\",\n    _s = $RefreshSig$();\n\nimport classnames from 'classnames';\nimport { useCallback, useMemo } from 'react';\nimport { deleteTodo } from '../../api/todos';\nimport { ErrorMessage } from '../../types/Error';\nimport { FilterType } from '../../types/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Footer = ({\n  todos,\n  filterType,\n  filterTypes,\n  completedTodos,\n  setSelectedId,\n  selectedId,\n  setErrorMessage,\n  errorMessage,\n  setTodos\n}) => {\n  _s();\n\n  const todosLeft = useMemo(() => {\n    return todos.filter(todo => !todo.completed).length;\n  }, [todos]);\n  const deleteCompletedTodos = useCallback(async () => {\n    setSelectedId(completedTodos.map(todo => todo.id));\n    await Promise.all(completedTodos.map(({\n      id\n    }) => deleteTodo(id))).then(() => setTodos(prevTodos => prevTodos.filter(({\n      completed\n    }) => !completed))).catch(() => {\n      setErrorMessage(ErrorMessage.NotDelete);\n      setSelectedId([]);\n    });\n    setSelectedId([]);\n  }, [todos, selectedId, errorMessage]);\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    className: \"todoapp__footer\",\n    \"data-cy\": \"Footer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"todo-count\",\n      \"data-cy\": \"todosCounter\",\n      children: `${todosLeft} items left`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"filter\",\n      \"data-cy\": \"Filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        \"data-cy\": \"FilterLinkAll\",\n        href: \"#/\",\n        className: classnames('filter__link', {\n          selected: filterType === FilterType.All\n        }),\n        onClick: () => filterTypes(FilterType.All),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        \"data-cy\": \"FilterLinkActive\",\n        href: \"#/active\",\n        className: classnames('filter__link', {\n          selected: filterType === FilterType.Active\n        }),\n        onClick: () => filterTypes(FilterType.Active),\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        \"data-cy\": \"FilterLinkCompleted\",\n        href: \"#/completed\",\n        className: classnames('filter__link', {\n          selected: filterType === FilterType.Completed\n        }),\n        onClick: () => filterTypes(FilterType.Completed),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      \"data-cy\": \"ClearCompletedButton\",\n      type: \"button\",\n      className: \"todoapp__clear-completed\",\n      onClick: deleteCompletedTodos,\n      disabled: !completedTodos,\n      children: \"Clear completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Footer, \"a0+1Xp8Y2ekWiTcv5nULZ2XdrUk=\");\n\n_c = Footer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"sources":["/Applications/Html/Mate_React/React_todo-app_with-api/React_todo-app_with-api-/src/components/Footer/Footer.tsx"],"names":["classnames","useCallback","useMemo","deleteTodo","ErrorMessage","FilterType","Footer","todos","filterType","filterTypes","completedTodos","setSelectedId","selectedId","setErrorMessage","errorMessage","setTodos","todosLeft","filter","todo","completed","length","deleteCompletedTodos","map","id","Promise","all","then","prevTodos","catch","NotDelete","selected","All","Active","Completed"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport { useCallback, useMemo } from 'react';\nimport { deleteTodo } from '../../api/todos';\nimport { ErrorMessage } from '../../types/Error';\nimport { FilterType } from '../../types/Filter';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  filterType: FilterType | string;\n  filterTypes: (arg: FilterType) => void;\n  completedTodos: Todo[];\n  setSelectedId: React.Dispatch<React.SetStateAction<number[]>>;\n  selectedId: number[];\n  setErrorMessage: React.Dispatch<React.SetStateAction<string>>;\n  errorMessage: string;\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n};\n\nexport const Footer: React.FC<Props> = ({\n  todos,\n  filterType,\n  filterTypes,\n  completedTodos,\n  setSelectedId,\n  selectedId,\n  setErrorMessage,\n  errorMessage,\n  setTodos,\n}) => {\n  const todosLeft = useMemo(() => {\n    return todos.filter(todo => !todo.completed).length;\n  }, [todos]);\n\n  const deleteCompletedTodos = useCallback(async () => {\n    setSelectedId(completedTodos.map((todo => todo.id)));\n\n    await Promise.all(completedTodos.map(({ id }) => deleteTodo(id)))\n      .then(() => setTodos((prevTodos) => prevTodos\n        .filter(({ completed }) => !completed)))\n      .catch(() => {\n        setErrorMessage(ErrorMessage.NotDelete);\n        setSelectedId([]);\n      });\n\n    setSelectedId([]);\n  }, [todos, selectedId, errorMessage]);\n\n  return (\n    <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {`${todosLeft} items left`}\n      </span>\n\n      <nav className=\"filter\" data-cy=\"Filter\">\n        <a\n          data-cy=\"FilterLinkAll\"\n          href=\"#/\"\n          className={classnames(\n            'filter__link',\n            { selected: filterType === FilterType.All },\n          )}\n          onClick={() => filterTypes(FilterType.All)}\n        >\n          All\n        </a>\n\n        <a\n          data-cy=\"FilterLinkActive\"\n          href=\"#/active\"\n          className={classnames(\n            'filter__link',\n            { selected: filterType === FilterType.Active },\n          )}\n          onClick={() => filterTypes(FilterType.Active)}\n        >\n          Active\n        </a>\n        <a\n          data-cy=\"FilterLinkCompleted\"\n          href=\"#/completed\"\n          className={classnames(\n            'filter__link',\n            { selected: filterType === FilterType.Completed },\n          )}\n          onClick={() => filterTypes(FilterType.Completed)}\n        >\n          Completed\n        </a>\n      </nav>\n      <button\n        data-cy=\"ClearCompletedButton\"\n        type=\"button\"\n        className=\"todoapp__clear-completed\"\n        onClick={deleteCompletedTodos}\n        disabled={!completedTodos}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}