{"ast":null,"code":"var _jsxFileName = \"/Applications/Html/leha/Todo-list_React/src/components/TodoList/TodoList.tsx\";\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport React from 'react';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport '../../styles/transistiongroup.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = ({\n  todos,\n  removeTodo,\n  selectedId,\n  isAdding,\n  title,\n  handleChange,\n  selectedTodo,\n  setSelectedTodo\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"todoapp__main\",\n    \"data-cy\": \"TodoList\",\n    children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      children: [todos.map(todo => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 300,\n        classNames: \"item\",\n        children: /*#__PURE__*/_jsxDEV(TodoItem, {\n          todo: todo,\n          removeTodo: removeTodo,\n          selectedId: selectedId,\n          isAdding: isAdding,\n          handleChange: handleChange,\n          todos: todos,\n          selectedTodo: selectedTodo,\n          setSelectedTodo: setSelectedTodo\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)), isAdding && /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 300,\n        classNames: \"temp-item\",\n        children: /*#__PURE__*/_jsxDEV(TodoItem, {\n          todo: {\n            id: 0,\n            title,\n            completed: false,\n            userId: Math.random()\n          },\n          removeTodo: removeTodo,\n          selectedId: selectedId,\n          isAdding: isAdding,\n          handleChange: handleChange,\n          todos: todos,\n          selectedTodo: selectedTodo,\n          setSelectedTodo: setSelectedTodo\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Applications/Html/leha/Todo-list_React/src/components/TodoList/TodoList.tsx"],"names":["TransitionGroup","CSSTransition","React","TodoItem","TodoList","todos","removeTodo","selectedId","isAdding","title","handleChange","selectedTodo","setSelectedTodo","map","todo","id","completed","userId","Math","random"],"mappings":";AAAA,SAASA,eAAT,EAA0BC,aAA1B,QAA+C,wBAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,OAAO,oCAAP;;AAaA,OAAO,MAAMC,QAAyB,GAAG,CAAC;AACxCC,EAAAA,KADwC;AAExCC,EAAAA,UAFwC;AAGxCC,EAAAA,UAHwC;AAIxCC,EAAAA,QAJwC;AAKxCC,EAAAA,KALwC;AAMxCC,EAAAA,YANwC;AAOxCC,EAAAA,YAPwC;AAQxCC,EAAAA;AARwC,CAAD,KASnC;AACJ,sBACE;AAAS,IAAA,SAAS,EAAC,eAAnB;AAAmC,eAAQ,UAA3C;AAAA,2BAEE,QAAC,eAAD;AAAA,iBACGP,KAAK,CAACQ,GAAN,CAAUC,IAAI,iBACb,QAAC,aAAD;AAEE,QAAA,OAAO,EAAE,GAFX;AAGE,QAAA,UAAU,EAAC,MAHb;AAAA,+BAKE,QAAC,QAAD;AAEE,UAAA,IAAI,EAAEA,IAFR;AAGE,UAAA,UAAU,EAAER,UAHd;AAIE,UAAA,UAAU,EAAEC,UAJd;AAKE,UAAA,QAAQ,EAAEC,QALZ;AAME,UAAA,YAAY,EAAEE,YANhB;AAOE,UAAA,KAAK,EAAEL,KAPT;AAQE,UAAA,YAAY,EAAEM,YARhB;AASE,UAAA,eAAe,EAAEC;AATnB,WACOE,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA;AALF,SACOD,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,cADD,CADH,EAqBGP,QAAQ,iBACP,QAAC,aAAD;AAEE,QAAA,OAAO,EAAE,GAFX;AAGE,QAAA,UAAU,EAAC,WAHb;AAAA,+BAKE,QAAC,QAAD;AAEE,UAAA,IAAI,EAAE;AACJO,YAAAA,EAAE,EAAE,CADA;AAEJN,YAAAA,KAFI;AAGJO,YAAAA,SAAS,EAAE,KAHP;AAIJC,YAAAA,MAAM,EAAEC,IAAI,CAACC,MAAL;AAJJ,WAFR;AAQE,UAAA,UAAU,EAAEb,UARd;AASE,UAAA,UAAU,EAAEC,UATd;AAUE,UAAA,QAAQ,EAAEC,QAVZ;AAWE,UAAA,YAAY,EAAEE,YAXhB;AAYE,UAAA,KAAK,EAAEL,KAZT;AAaE,UAAA,YAAY,EAAEM,YAbhB;AAcE,UAAA,eAAe,EAAEC;AAdnB,WACOM,IAAI,CAACC,MAAL,EADP;AAAA;AAAA;AAAA;AAAA;AALF,SACO,CADP;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAmDD,CA7DM;KAAMf,Q","sourcesContent":["import { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nimport '../../styles/transistiongroup.scss';\n\ntype Props = {\n  todos: Todo[];\n  removeTodo: (TodoId: number) => void;\n  selectedId: number[];\n  isAdding: boolean;\n  title: string;\n  handleChange: (updateId: number, data: Partial<Todo>) => Promise<void>;\n  selectedTodo: number;\n  setSelectedTodo: (value: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  removeTodo,\n  selectedId,\n  isAdding,\n  title,\n  handleChange,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <section className=\"todoapp__main\" data-cy=\"TodoList\">\n\n      <TransitionGroup>\n        {todos.map(todo => (\n          <CSSTransition\n            key={todo.id}\n            timeout={300}\n            classNames=\"item\"\n          >\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              removeTodo={removeTodo}\n              selectedId={selectedId}\n              isAdding={isAdding}\n              handleChange={handleChange}\n              todos={todos}\n              selectedTodo={selectedTodo}\n              setSelectedTodo={setSelectedTodo}\n            />\n          </CSSTransition>\n        ))}\n\n        {isAdding && (\n          <CSSTransition\n            key={0}\n            timeout={300}\n            classNames=\"temp-item\"\n          >\n            <TodoItem\n              key={Math.random()}\n              todo={{\n                id: 0,\n                title,\n                completed: false,\n                userId: Math.random(),\n              }}\n              removeTodo={removeTodo}\n              selectedId={selectedId}\n              isAdding={isAdding}\n              handleChange={handleChange}\n              todos={todos}\n              selectedTodo={selectedTodo}\n              setSelectedTodo={setSelectedTodo}\n            />\n          </CSSTransition>\n        )}\n      </TransitionGroup>\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}